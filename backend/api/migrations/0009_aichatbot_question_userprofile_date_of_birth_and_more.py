# Generated by Django 5.1.1 on 2024-11-04 12:25

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0008_userprofile_avatar'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIChatbot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Represents the name of the chatbot.', max_length=100)),
                ('icon_picture', models.ImageField(blank=True, help_text='An optional field to store an icon image for the chatbot.', null=True, upload_to='chatbot_icons/')),
                ('theme', models.CharField(help_text='A field to describe the theme or style of the chatbot (e.g., friendly, formal).', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('correct_answer', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='userprofile',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='parentchildrelation',
            name='child',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='child_parent_relation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='parentchildrelation',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_children_relations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='parentchildrequest',
            name='child',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_parent_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='parentchildrequest',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_child_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='role',
            field=models.CharField(choices=[('parent', 'Parent'), ('child', 'Child'), ('therapist', 'Therapist')], max_length=10),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.question')),
            ],
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('total_errors_in_speech', models.IntegerField(default=0, help_text='Tracks any pronunciation or articulation errors, such as mispronunciations or omitted sounds.')),
                ('incorrect_words_spoken', models.IntegerField(default=0, help_text='Counts instances where the child uses incorrect vocabulary or grammar, such as wrong word choice, tense, or structure.')),
                ('structure_and_vocabulary_score', models.IntegerField(default=0, help_text='Observes sentence structure, word variety, and the child’s ability to construct complex ideas.')),
                ('correct_words_and_sentences', models.IntegerField(default=0, help_text='Notes the words or sentences the child uses correctly, providing a balanced view of strengths and areas for improvement.')),
                ('expressive_language_score', models.IntegerField(default=0, help_text='Evaluates how well the child can describe, narrate, and explain their ideas.')),
                ('spontaneous_answers_score', models.IntegerField(default=0, help_text='Saves the child’s answers as they are, capturing the child’s natural language use for therapists to review.')),
                ('chatbot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='talks', to='api.aichatbot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='talks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TherapistChildRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('child', models.OneToOneField(limit_choices_to={'userprofile__role': 'child'}, on_delete=django.db.models.deletion.CASCADE, related_name='therapist_relation', to=settings.AUTH_USER_MODEL)),
                ('therapist', models.ForeignKey(limit_choices_to={'userprofile__role': 'therapist'}, on_delete=django.db.models.deletion.CASCADE, related_name='patients', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TherapistChildRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('request_date', models.DateTimeField(auto_now_add=True, help_text='A date field to record when the request was made.')),
                ('response_date', models.DateTimeField(blank=True, help_text='A date field for when the request was approved or rejected. This field can remain blank if the status is still pending.', null=True)),
                ('message', models.TextField(blank=True, help_text='An optional field for any message or additional context the therapist wants to include with the request.', null=True)),
                ('child', models.ForeignKey(limit_choices_to={'userprofile__role': 'child'}, on_delete=django.db.models.deletion.CASCADE, related_name='therapist_requests', to=settings.AUTH_USER_MODEL)),
                ('therapist', models.ForeignKey(limit_choices_to={'userprofile__role': 'therapist'}, on_delete=django.db.models.deletion.CASCADE, related_name='child_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.CharField(max_length=50)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
